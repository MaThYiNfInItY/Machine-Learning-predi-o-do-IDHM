IDHM.predições.df <- merge(teste.IDHM, IDHM.pred.rfr, by.x = 0, by.y = 0, all.x = TRUE, all.y = TRUE)
# Mesclar com base no índice
IDHM.predições.df <- merge(teste.IDHM, IDHM.predições.df, by.x = 0, by.y = 0, all.x = TRUE, all.y = TRUE)
# Criar uma nova coluna calculada com a diferença da predição do IDHM, e o valor Real
IDHM.predições.df$diff <- with(IDHM.predições.df, IDHM.predições.df$IDHM - IDHM.predições.df$IDHM.predictions.3)
# Criar uma nova coluna calculada com a diferença da predição do IDHM, e o valor Real
IDHM.predições.df$diff <- with(IDHM.predições.df, IDHM.predições.df$IDHM - IDHM.predições.df$IDHM.predições.1)
# Obter a média da diferença
IDHM.predições.df
mean(IDHM.predições.df[,"diff"])
legend("topright", # posição da legenda
legend=c("predição IDHM", "IDHM Real"), # rótulos da legenda
col=c("red", "black"), # cores das linhas
lty=1, # tipo de linha
cex=0.8) # tamanho da fonte
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições.df <- IDHM.predições.df[order(IDHM.predições.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1,type = "l", col="red",xlab="Dados Testados", ylab="Real vs. predição", main="Variancia da predição") +
lines(IDHM.pred.rfr$IDHM, lwd=2)
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1,type = "l", col="red",xlab="Dados Testados", ylab="Real vs. predição", main="Variancia da predição") +
lines(IDHM.predições.df$IDHM, lwd=2)
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1,type = "l", col="red",xlab="Dados Testados", ylab="Real vs. predição", main="Variação da predição") +
lines(IDHM.predições.df$IDHM, lwd=2)
#avaliar a importância das variáveis para o modelo
importance(IDHM.model.1)
varImpPlot(IDHM.model.1)
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
library(plyr)
library(caret)
library(randomForest)
library(caTools)
amostra.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
library(dplyr)
amostra.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
treino.IDHM  <- predic.IDHM[amostra.IDHM, ]
teste.IDHM <- predic.IDHM[-amostra.IDHM, ]
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model.1)
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model.1)
# Plotar erro vs numero de arvores
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo 1", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model.1)
# Plotar erro vs numero de arvores
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo 1", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#o valor ótimo para mtry é 4, que produz o menor erro.
set.seed(123)
# random forest para regressão com mtry=4
IDHM.model.2 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 4,
importance = TRUE, na.action = na.omit)
print(IDHM.model.2)
# Plot the error vs the number of trees graph
plot(IDHM.model.2, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 5 - Erro vs Número de Árvores no Modelo 2", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
> plot(IDHM.model.2, col = c("blue",
library(plyr)
library(dplyr)
library(caret)
library(randomForest)
library(caTools)
> plot(IDHM.model.2, col = c("blue",
plot(IDHM.model.2, col = c("blue",
+ "orange")[codes(IDHM.model.2$predicted)], pch = c(1,
+ 16)[codes(crabs$sex)], xlab="", ylab="")
#avaliar a importância das variáveis para o modelo
importance(IDHM.model.1)
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições.df <- IDHM.predições.df[order(IDHM.predições.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 3 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições.df <- IDHM.predições.df[order(IDHM.predições.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 7 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições.df <- IDHM.predições.df[order(IDHM.predições.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 7 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Plotar as predições versus o IDHM real
plot(IDHM.predições.df$IDHM.predições.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 7 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
library(plyr)
library(caret)
library(randomForest)
library(caTools)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
library(dplyr)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
treino90.IDHM  <- predic.IDHM[amostra.IDHM, ]
teste90.IDHM <- predic.IDHM[-amostra.IDHM, ]
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=5000, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model.1)
print(IDHM.model90.1)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.9, list = FALSE)
treino90.IDHM  <- predic.IDHM[amostra.IDHM, ]
teste90.IDHM <- predic.IDHM[-amostra.IDHM, ]
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.9, list = FALSE)
treino90.IDHM  <- predic.IDHM[amostra2.IDHM, ]
teste90.IDHM <- predic.IDHM[-amostra2.IDHM, ]
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=5000, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
View(IDHM.model90.1)
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=5000, mtry = 9,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model.1, main = "")
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50000, mtry = 19,
importance = TRUE, na.action = na.omit)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50, mtry = 12,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model.1, main = "")
plot(IDHM.model.1, main = "")
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50, mtry = 13,
importance = TRUE, na.action = na.omit)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50, mtry = 14,
importance = TRUE, na.action = na.omit)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50, mtry = 15,
importance = TRUE, na.action = na.omit)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50000, mtry = 14,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=50, mtry = 14,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=5000, mtry = 14,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry =3,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry <- tuneRF(treino90.IDHM[-6],treino90.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry2 <- tuneRF(treino90.IDHM[-6],treino90.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry2)
set.seed(123)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=500, mtry =3,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=5000, mtry = 14,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry2 <- tuneRF(treino90.IDHM[-6],treino90.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry2)
# random forest para regressão, iniciando com 5000 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
summary(IDHM.model90.1)
plot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry2 <- tuneRF(treino90.IDHM[-6],treino90.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry2)
set.seed(123)
# random forest para regressão com mtry=4
IDHM.model90.2 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=500, mtry = 4,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.2)
# Plot the error vs the number of trees graph
plot(IDHM.model90.2, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 5 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Fazer predições com dados de teste usando modelo 1 (mtry = 3)
IDHM.predições90.1 <- IDHM.model90.1 %>% predict(teste90.IDHM)
head(IDHM.predições90.1)
# Fazer predições com dados de teste usando modelo 2 (mtry = 4)
IDHM.predições90.2 <- IDHM.model0.2 %>% predict(teste90.IDHM)
# Fazer predições com dados de teste usando modelo 2 (mtry = 4)
IDHM.predições90.2 <- IDHM.model90.2 %>% predict(teste90.IDHM)
head(IDHM.predições90.2)
# Calcular o erro médio de previsão -- erro quadrático médio da raiz (RMSE) de ambos os modelos
RMSE(IDHM.predições90.1, teste90.IDHM$IDHM)
RMSE(IDHM.predições90.2, teste90.IDHM$IDHM)
#avaliar a importância das variáveis para o modelo
importance(IDHM.model90.1)
# Plot da importância das variáveis
varImpPlot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 2 - Importância das Variáveis no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Converter predições para um data frame
IDHM.predições90.df <- as.data.frame(IDHM.predições90.1)
# Mesclar com base no índice
IDHM.predições90.df <- merge(teste90.IDHM, IDHM.predições90.df, by.x = 0, by.y = 0, all.x = TRUE, all.y = TRUE)
# Criar uma nova coluna calculada com a diferença da predição do IDHM, e o valor Real
IDHM.predições90.df$diff <- with(IDHM.predições90.df, IDHM.predições90.df$IDHM - IDHM.predições90.df$IDHM.predições90.1)
# Obter a média da diferença
IDHM.predições90.df
mean(IDHM.predições90.df[,"diff"])
# Converter predições para um data frame
IDHM.predições90.df <- as.data.frame(IDHM.predições90.1)
# Mesclar com base no índice
IDHM.predições90.df <- merge(teste90.IDHM, IDHM.predições90.df, by.x = 0, by.y = 0, all.x = TRUE, all.y = TRUE)
# Criar uma nova coluna calculada com a diferença da predição do IDHM, e o valor Real
IDHM.predições90.df$diff <- with(IDHM.predições90.df, IDHM.predições90.df$IDHM - IDHM.predições90.df$IDHM.predições90.1)
# Obter a média da diferença
IDHM.predições90.df
mean(IDHM.predições90.df[,"diff"])
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições90.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições90.df <- IDHM.predições90.df[order(IDHM.predições90.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições90.df$IDHM.predições90.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições90.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 3 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
sum(IDHM.predições90.df[,"diff"])
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições90.df ) <- NULL
amostra.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.8, list = FALSE)
treino.IDHM  <- predic.IDHM[amostra.IDHM, ]
teste.IDHM <- predic.IDHM[-amostra.IDHM, ]
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model.1 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model.1)
# Plotar erro vs numero de arvores
plot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry <- tuneRF(treino.IDHM[-6],treino.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry)
set.seed(123)
# random forest para regressão com mtry=4
IDHM.model.2 <- randomForest(IDHM ~ ., data = treino.IDHM, ntree=500, mtry = 4,
importance = TRUE, na.action = na.omit)
print(IDHM.model.2)
# Plot the error vs the number of trees graph
plot(IDHM.model.2, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 5 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Fazer predições com dados de teste usando modelo 1 (mtry = 3)
IDHM.predições.1 <- IDHM.model.1 %>% predict(teste.IDHM)
head(IDHM.predições.1)
# Fazer predições com dados de teste usando modelo 2 (mtry = 4)
IDHM.predições.2 <- IDHM.model.2 %>% predict(teste.IDHM)
head(IDHM.predições.2)
# Calcular o erro médio de previsão -- erro quadrático médio da raiz (RMSE) de ambos os modelos
RMSE(IDHM.predições.1, teste.IDHM$IDHM)
RMSE(IDHM.predições.2, teste.IDHM$IDHM)
### O modelo original com mtry=4 (hdi.rf.1) na verdade tem um RMSE menor, portanto, é o melhor modelo a ser usado daqui para frente. Um RMSE de 0.006852 é consideravelmente baixo e indica um modelo de previsão altamente válido. analisar a significância de cada variável para ver possíveis mudanças na média.
#avaliar a importância das variáveis para o modelo
importance(IDHM.model.1)
# Plot da importância das variáveis
varImpPlot(IDHM.model.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 2 - Importância das Variáveis no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.9, list = FALSE)
treino90.IDHM  <- predic.IDHM[amostra2.IDHM, ]
teste90.IDHM <- predic.IDHM[-amostra2.IDHM, ]
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino2.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
amostra2.IDHM <- predic.IDHM$IDHM %>%
createDataPartition(p = 0.9, list = FALSE)
treino90.IDHM  <- predic.IDHM[amostra2.IDHM, ]
teste90.IDHM <- predic.IDHM[-amostra2.IDHM, ]
# random forest para regressão, iniciando com 500 arvores e mtry of 3
IDHM.model90.1 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=500, mtry = 3,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.1)
# Plotar erro vs numero de arvores
plot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 4 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
#Usar tuneRF para determinar se há melhor mtry na tentativa de encontrar o valor que produz o menor erro.
mtry2 <- tuneRF(treino90.IDHM[-6],treino90.IDHM$IDHM, ntreeTry=500,
stepFactor=1,improve=0.01, trace=TRUE, plot=FALSE)
print(mtry2)
set.seed(123)
# random forest para regressão com mtry=4
IDHM.model90.2 <- randomForest(IDHM ~ ., data = treino90.IDHM, ntree=500, mtry = 4,
importance = TRUE, na.action = na.omit)
print(IDHM.model90.2)
# Plot the error vs the number of trees graph
plot(IDHM.model90.2, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 5 - Erro vs Número de Árvores no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Fazer predições com dados de teste usando modelo 1 (mtry = 3)
IDHM.predições90.1 <- IDHM.model90.1 %>% predict(teste90.IDHM)
head(IDHM.predições90.1)
# Fazer predições com dados de teste usando modelo 2 (mtry = 4)
IDHM.predições90.2 <- IDHM.model90.2 %>% predict(teste90.IDHM)
head(IDHM.predições90.2)
# Calcular o erro médio de previsão -- erro quadrático médio da raiz (RMSE) de ambos os modelos
RMSE(IDHM.predições90.1, teste90.IDHM$IDHM)
RMSE(IDHM.predições90.2, teste90.IDHM$IDHM)
### O modelo original com mtry=4 (hdi.rf.1) na verdade tem um RMSE menor, portanto, é o melhor modelo a ser usado daqui para frente. Um RMSE de 0.006852 é consideravelmente baixo e indica um modelo de previsão altamente válido. analisar a significância de cada variável para ver possíveis mudanças na média.
#avaliar a importância das variáveis para o modelo
importance(IDHM.model90.1)
# Plot da importância das variáveis
varImpPlot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 2 - Importância das Variáveis no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Fazer predições com dados de teste usando modelo 1 (mtry = 3)
IDHM.predições90.1 <- IDHM.model90.1 %>% predict(teste90.IDHM)
head(IDHM.predições90.1)
# Fazer predições com dados de teste usando modelo 2 (mtry = 4)
IDHM.predições90.2 <- IDHM.model90.2 %>% predict(teste90.IDHM)
head(IDHM.predições90.2)
# Calcular o erro médio de previsão -- erro quadrático médio da raiz (RMSE) de ambos os modelos
RMSE(IDHM.predições90.1, teste90.IDHM$IDHM)
RMSE(IDHM.predições90.2, teste90.IDHM$IDHM)
### O modelo original com mtry=4 (hdi.rf.1) na verdade tem um RMSE menor, portanto, é o melhor modelo a ser usado daqui para frente. Um RMSE de 0.006852 é consideravelmente baixo e indica um modelo de previsão altamente válido. analisar a significância de cada variável para ver possíveis mudanças na média.
#avaliar a importância das variáveis para o modelo
importance(IDHM.model90.1)
# Plot da importância das variáveis
varImpPlot(IDHM.model90.1, main = "")
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 2 - Importância das Variáveis no Modelo Random Forest", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
# Converter predições para um data frame
IDHM.predições90.df <- as.data.frame(IDHM.predições90.1)
# Mesclar com base no índice
IDHM.predições90.df <- merge(teste90.IDHM, IDHM.predições90.df, by.x = 0, by.y = 0, all.x = TRUE, all.y = TRUE)
# Criar uma nova coluna calculada com a diferença da predição do IDHM, e o valor Real
IDHM.predições90.df$diff <- with(IDHM.predições90.df, IDHM.predições90.df$IDHM - IDHM.predições90.df$IDHM.predições90.1)
# Obter a média da diferença
IDHM.predições90.df
mean(IDHM.predições90.df[,"diff"])
#0.001515058, significa que, em média, o modelo está subestimando o IDHM em 0.001515058 unidades.
### visualizando as predições do modelo em comparação com os valores reais em plots
# Redefinir o índice de linha(row.names)
rownames(IDHM.predições90.df ) <- NULL
# Ordenar os dados (sort)
IDHM.predições90.df <- IDHM.predições90.df[order(IDHM.predições90.df$IDHM),]
# Plotar as predições versus o IDHM real
plot(IDHM.predições90.df$IDHM.predições90.1, type = "l", col="red",
xlab="Dados Testados", ylab="Real vs. Predição", main="")
# Adicionar linhas do IDHM Real
lines(IDHM.predições90.df$IDHM, lwd=2)
# Adicionar a legenda
legend("topright",
legend=c("Predição IDHM", "IDHM Real"),
col=c("red", "black"),
lty=1,
cex=0.8)
# Adicionar título e fonte no estilo ABNT
title(main = "Gráfico 3 - Variação da Predição do IDHM", adj = 0)
mtext("Fonte: Elaboração própria com dados do Atlas Brasil", side=1, line=4, adj = 0, cex=0.8)
knit_with_parameters("C:/Users/mathe/Desktop/IDHM-predicting-main/Machine Learning 90-10.Rmd")
tinytex::tlmgr_update()
tinytex::tlmgr_update()
